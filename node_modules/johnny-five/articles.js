var fs = require("fs");
var path = require("path");
var _ = require("lodash");
var yaml = require("js-yaml");
var contents = fs.readFileSync("articles.yaml", "utf8");
var template = _.template(fs.readFileSync("tpl/.article.tpl", "utf8"));
var articles = yaml.load(contents);
var OUT = "docs/articles";
var replacePart = {
  Arduino: "[Arduino](http://www.arduino.cc/), [Intel Galileo](http://arduino.cc/en/ArduinoCertified/IntelGalileo) or or other Johnny-Five supported board."
};




// console.log( template );
// console.log(articles);


articles.forEach(function(article) {
  var date = (new Date()).toJSON().split("T")[0] + " 12:00:00";
  var wired = article.file + ".jpg";
  var breakout = article.file + "-breakout.jpg";
  var code = fs.readFileSync("eg/" + article.file + ".js", "utf8");
  var slug = "javascript-" + article.device.toLowerCase().replace(/\s/g, "-") + "-with-johnny-five";

  code = code.replace("../lib/johnny-five.js", "johnny-five");

  var parts = article.parts.reduce(function(accum, part) {
    if (replacePart[part]) {
      part = replacePart[part];
    }
    accum += "- " + part + "\n";
    return accum;
  }, "");

  var wires = article.wiring.reduce(function(accum, wire) {
    accum += "- " + wire + "\n";
    return accum;
  }, "");

  var data = _.assign(article, {
    date: date,
    wired: wired,
    code: code,
    parts: parts,
    wiring: wires,
    breakout: breakout,
    slug: slug
  });

  var content = template(data);

  console.log( content );
  // fs.writeFileSync(slug + ".md", content, "utf8");
});
